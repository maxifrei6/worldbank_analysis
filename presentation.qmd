---
title: "Worldbank Analysis"
subtitle: "subtitle"
author: "Robin Billinger, Maximilian Frei, Leonie Mertes, Iman Saffari"
institute: "Institut für Statistik"
date: "2025-01-20"
format: 
  revealjs:
    self-contained: true
    footer: >
      <div style="display: flex; justify-content: space-between; width: 80%;
        margin-left: 10%; margin-right: 10%;">
      <span style="text-align: left;">Grundlegendes Praxisprojekt</span>
      <span style="text-align: center;">Robin Billinger, Maximilian Frei, Leonie Mertes, Iman Saffari</span>
      <span style="text-align: right;">20.01.2025</span>
      </div>
editor: visual
execute:
  echo: false
  warning: false
  message: false
---

```{r setup, include=FALSE}
## YOU NEED TO RUN env_setup TO INSTALL ALL PACKAGES
library(here)
library(dplyr)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
library(patchwork)
library(grid)

# Globally center all plots while displaying knitted version in HTML
knitr::opts_chunk$set(fig.align = "center")

# Load the dataset
data_merged <- readRDS(here("Data", "Processed", "data_merged.RDS"))
data_grouped <- readRDS(here("Data", "Processed", "data_grouped.RDS"))

# data for education
data_education <- left_join(data_merged, data_grouped, by = c("Country Name", "Country Code"))

# data for tobacco vs BIP
source(here("Scripts", "functions.R"))
data_tob <- data_merged %>%
  select(`Country Name`,
         `Country Code`,
         Year,
         NY.GDP.PCAP.PP.KD,
         SH.PRV.SMOK)
data_table <- data_tob %>%
  group_by(Year) %>%
  reframe(num_na = sum(is.na(SH.PRV.SMOK))) %>%
  filter(num_na < 25)
data_tob <- data_tob %>%
  filter(`Country Name` != "Aruba") %>%
  filter(Year %in% data_table$Year)
data_tob <- data_tob %>%
  group_by(Year) %>%
  mutate(
    cat_tob_usage_per_year =
      group_data_year(
        df = data_tob,
        grouping_by = "SH.PRV.SMOK",
        year = Year,
        column_new = "tob_usage_per_year",
        quantile_labels = c("Sehr gering", "Gering", "Mittel", "Groß", "Sehr groß")
      )$cat_tob_usage_per_year
  )
```

## Agenda

::: incremental
1.  Überblick und Terminologie

2.  Datenanalyse

    2.1 Elektrizität und nationales Einkommen\
    2.2 Bildung\
    2.3 HIV\
    2.4 Tabakkonsum\
    2.5 Landwirtschaft

3.  Zusammenfassung und Diskussion
:::

## Überblick

**Worldbank Datensatz**

::: incremental
-   **Erhebungsart**: Longitudinal

-   25 Länder über 22 Jahre (2000 - 2021) untersucht

    -- Weitere Details

-   18 verschiedene Indikatoren
:::

## Terminologie

::: incremental
-   **fachbegriff**: kurze Beschreibung

-   **weiterer fachbegriff**: kurze Beschreibung
:::

## 2.1 Elektrizität und nationales Einkommen (1/2) {.smaller}

Wie korreliert der Zugang zu Elektrizität mit dem bereinigten Nettonationaleinkommen pro Kopf in verschiedenen Ländern?

## 2.1 Elektrizität und nationales Einkommen (2/2) {.smaller}

Hängt dies auch von der Größe des Landes oder der Einwohnerzahl ab?

## 2.2 Bildung (1/2) {.smaller}

Haben Länder mit **höherer Staatsverschuldung (in % des BIP)** einen **geringeren Anteil an Erwerbspersonen mit Grundbildung**?

```{r}
# Faceted scatter plot: Debt vs Education by Income Level
ggplot(data_education, aes(x = GC.DOD.TOTL.GD.ZS, y = SL.TLF.BASC.ZS, color = cat_income_level)) +
  geom_point(alpha = 0.7, size = 3) +
  geom_smooth(method = "lm", se = FALSE, color = "black") +
  facet_wrap(~ cat_income_level) +
  labs(
    title = "Verschuldung des Zentralstaats im Vergleich zur Erwerbsbevölkerung mit Grundbildung nach Einkommensniveau",
    x = "Zentralstaatliche Verschuldung (% des BIP)",
    y = "Erwerbstätige mit Grundbildung (%)",
    color = "Einkommensniveau"
  ) +
  theme_minimal() +
  theme(strip.text = element_text(face = "bold"))
```

## 2.2 Bildung (2/3) {.smaller}

```{r longitudinal_plot, fig.height=8, fig.width=12, echo=FALSE, warning=FALSE, message=FALSE}
# Filter countries with more than 4 non-NA entries for SL.TLF.BASC.ZS
data_filtered <- data_education %>%
  filter(cat_income_level == "Medium") %>%
  group_by(`Country Name`) %>%
  filter(sum(!is.na(SL.TLF.BASC.ZS)) > 4) %>%  # Keep countries with more than 4 non-NA entries
  ungroup()

# Convert Year column to numeric
data_filtered <- data_filtered %>%
  mutate(Year = as.numeric(as.character(Year)))

# Faceted line chart with subtle trend lines and simplified x-axis
ggplot(data_filtered, 
       aes(x = Year, y = SL.TLF.BASC.ZS, color = cat_population_size)) +
  geom_line(aes(group = `Country Name`), alpha = 0.8, size = 0.7) +  # Line chart
  geom_smooth(method = "lm", se = FALSE, linetype = "dashed", size = 0.8, color = "grey50", alpha = 0.6) +  # Subtle trend line
  facet_wrap(~ `Country Name`, scales = "free_y") +  # Facet by country
  scale_x_continuous(breaks = seq(2000, 2020, 5)) +  # Simplify x-axis breaks
  labs(
    title = "Bildungstrends im Zeitverlauf nach Land (Länder mit mittlerem Einkommen und >4 Nicht-NA-Einträgen)",
    x = "Jahr",
    y = "Erwerbstätige mit Grundbildung (%)",
    color = "Größe der Bevölkerung"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, face = "bold", hjust = 0.5),  # Bigger and centered title
    strip.text = element_text(size = 8, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
    legend.position = "bottom"
  )

```

## 2.2 Bildung (3/3) {.smaller}

Sind Länder mit einem höheren Prozentsatz an Erwerbstätigen mit Grundbildung in der Lage, eine **niedrigere** Schüler-Lehrer-Relation beizubehalten, und welche Auswirkungen könnte dies auf die Bildungsqualität haben?

```{r, message=FALSE, warning=FALSE, echo=FALSE}
# Scatter plot: pupil-teacher ratios vs labor force with basic education
ggplot(data_education, aes(x = SE.TER.ENRL.TC.ZS, y = SL.TLF.BASC.ZS, color = cat_income_level)) +
  geom_point(alpha = 0.7, size = 3) +
  geom_smooth(method = "lm", se = FALSE, color = "black") +
  facet_wrap(~ cat_income_level) +
  labs(
    title = "Schüler-Lehrer-Verhältnis vs. Erwerbspersonen mit Grundbildung",
    x = "Schüler-Lehrer-Relation",
    y = "Erwerbspersonen mit Grundbildung (%)",
    color = "Einkommensniveau"
  ) +
  theme_minimal()

```

## 2.3 HIV (1/3) {.smaller}

Wie verhält sich die **HIV-Prävalenz in der Bevölkerung zwischen 15 und 49 Jahren** zum **gesamten Alkoholkonsum pro Kopf**?

```{r}
data_processed <- left_join(data_merged, data_grouped, by = c("Country Name", "Country Code"))
data_hiv <- data_processed %>% 
  select(`Country Name`, `Country Code`, Year, SH.DYN.AIDS.ZS, SH.ALC.PCAP.LI, SL.TLF.BASC.ZS, cat_alc, cat_education)

data_hiv %>%
  group_by(Year, cat_alc) %>%
  summarise(
    SH.DYN.AIDS.ZS = mean(SH.DYN.AIDS.ZS, na.rm = TRUE),
    SH.ALC.PCAP.LI = mean(SH.ALC.PCAP.LI, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  ggplot(aes(Year, SH.DYN.AIDS.ZS, colour = cat_alc)) +
  geom_point(size = 3, alpha = 0.7) +
  geom_line(aes(group = cat_alc)) +
  theme(axis.text.x = element_text(
    angle = 45,
    hjust = 1,
    size = 6
  )) +
  labs(
    title = "HIV Prävalenz über die Jahre",
    x = "Jahr",
    y = "HIV Prävalenz",
    colour = "relativer Alkoholkonsum"
  ) +
  scale_colour_brewer(palette = "Set2")
```

## 2.3 HIV (2/3) {.smaller}

Weitere Analyse

```{r}

data_hiv <- data_processed %>% 
  select(`Country Name`, `Country Code`, Year, SH.DYN.AIDS.ZS, SH.ALC.PCAP.LI, SL.TLF.BASC.ZS, cat_alc, cat_education)

data_hiv %>%
  group_by(cat_alc) %>%
  summarise(
    SH.DYN.AIDS.ZS = mean(SH.DYN.AIDS.ZS, na.rm = TRUE),
    SH.ALC.PCAP.LI = mean(SH.ALC.PCAP.LI, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  ggplot(aes(SH.ALC.PCAP.LI, SH.DYN.AIDS.ZS, colour = cat_alc)) +
  geom_point(size = 3, alpha = 0.7) +
  labs(
    x = "Alkoholkonsum in Litern pro Kopf",
    y = "HIV Prävalenz in %",
    title = "Alkoholkonsum vs. HIV Prävalenz im Schnitt über die Jahre",
    colour = "relativer Alkoholkonsum"
  ) +
  geom_smooth(aes(group = 1), method = "lm", se = FALSE) +
  scale_colour_brewer(palette = "Set2")
```

## 2.3 HIV (3/3) {.smaller}

Haben Länder mit einem **höheren Prozentsatz der Erwerbsbevölkerung mit Grundbildung** eine **niedrigere HIV-Prävalenzrate in der Bevölkerung zwischen 15 und 49**?

\<\<\<\<\<\<\< HEAD

```{r}

data_hiv %>%
  group_by(cat_education) %>%
  summarise(
    SH.DYN.AIDS.ZS = mean(SH.DYN.AIDS.ZS, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  ggplot(aes(x = cat_education, y = SH.DYN.AIDS.ZS)) +
  geom_col(fill = "steelblue") +
  labs(
    x = "relatives Bildungslevel der arbeitsfähigen Bevölkerung",
    y = "HIV Prävalenz in %",
    title = "Bildungsstand vs. HIV Prävalenz im Schnitt über die Jahre"
  )
```

## 2.4 Tabakkonsum (1/2) {.smaller}

In welchem Zusammenhang steht das Bruttoinlandsprodukt pro Kopf mit der Prävalenz des aktuellen Tabakkonsums unter Erwachsenen innerhalb eines Landes?

```{r tobacco_setup}
# Load the dataset
data_tobacco <- data_merged

# Filter relevant columns Country Name and Code, Year, NY.GDP.PCAP.PP.KD and SH.PRV.SMOK
data_tobacco <- data_tobacco %>%
  select(`Country Name`, `Country Code`, Year, NY.GDP.PCAP.PP.KD, SH.PRV.SMOK)

# Convert column 'Year' to data type Integer
data_tobacco$Year <- as.integer(data_tobacco$Year)

# As data to "Aruba" only contains NAs, remove Aruba from dataset
data_tobacco <- data_tobacco[data_tobacco$`Country Name` != "Aruba", ]

# As we only have data on each country for the years 2000, 2005, 2010, 2018, 2019, 2020,
# we remove all missing years for each country
data_tobacco <-
  data_tobacco[data_tobacco$Year %in% c(2000, 2005, 2010, 2018, 2019, 2020), ]

# Calculate mean and standard deviation for each year
data_tobacco_param <- data_tobacco %>%
  group_by(Year) %>%
  summarize(SH.PRV.SMOK_mean = mean(SH.PRV.SMOK),
            SH.PRV.SMOK_sd = sd(SH.PRV.SMOK)) %>%
  ungroup()

# Generate evenly-spaced values of x and compute density for each year
data_tobacco_normdensity <- data_tobacco_param %>%
  rowwise() %>%
  mutate(
    # Create 100 evenly-spaced points in-between the lowest and highest possible x value
    norm_x_val = list(seq(0, 100, length.out = 101)),
    # Compute the corresponding PDF values
    norm_y_val = list(dnorm(norm_x_val,
                            mean = SH.PRV.SMOK_mean,
                            sd = SH.PRV.SMOK_sd))) %>%
  # Convert the lists into columns
  unnest(c(norm_x_val, norm_y_val))

# Remove rows with values of calculated normal distribution that are larger than 60%
# (i.e. 60% > max(SH.PRV.SMOK))
data_tobacco_normdensity <- data_tobacco_normdensity %>%
  filter(norm_x_val <= 60)
```

```{r tobacco_plot1_}
data_tob %>%
  group_by(cat_tob_usage_per_year) %>%
  ggplot(aes(x = cat_tob_usage_per_year, y = NY.GDP.PCAP.PP.KD)) +
  geom_col(fill = "steelblue") +
  facet_wrap( ~ Year) +
  theme(axis.text.x = element_text(
    angle = 45,
    hjust = 1,
    size = 9
  )) +
  labs(
    x = "relativer Tabakkonsum",
    y = "BIP pro Kopf in $",
    title = "Tabakkonsum vs. BIP",
    subtitle = "Pro Jahr gruppierte Daten"
  )
```

## 2.4 Tabakkonsum (2/2) {.smaller}

```{r tobacco_plot2_faceted_scatter_and_density, fig.height=7, fig.width=12}
# Scatter plot of interested variables faceted years with density curves
# Plot the upper row of the data points for the assembled tobacco plotting
plot_tobacco1_data_upper <-
  ggplot(data_tobacco %>% filter(Year %in% c(2000, 2005, 2010))) +
  geom_point(aes(x = SH.PRV.SMOK, y = NY.GDP.PCAP.PP.KD, group = Year), alpha = 0.5) +
  geom_smooth(data = data_tobacco %>% filter(Year %in% c(2000, 2005, 2010)),
              aes(x = SH.PRV.SMOK, y = NY.GDP.PCAP.PP.KD, group = Year),
              method = MASS::rlm, linewidth = 1, se = FALSE, color = "black") +
  ggtitle("Zusammenhang zwischen Prävalenz des aktuellen Tabakkonsums und BIP pro Kopf") +
  scale_x_continuous(name = "Prävalenz des aktuellen Tabakkonsums [%]",
                     breaks = c(0, 10, 20, 30, 40, 50, 60),
                     minor_breaks = waiver(),
                     limits = c(0, 60)) +
  scale_y_continuous(name = "BIP pro Kopf [$]",
                     breaks = c(0, 25000, 50000, 75000, 100000, 125000),
                     minor_breaks = waiver(),
                     limits = c(0, 125000)) +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.title.x = element_blank(),
        plot.margin = margin(0, 0, 0, 0),
        plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ Year)

# Plot the bottom row of the data points for the assembled tobacco plotting
plot_tobacco1_data_bottom <-
  ggplot(data_tobacco %>% filter(Year %in% c(2018, 2019, 2020))) +
  geom_point(aes(x = SH.PRV.SMOK, y = NY.GDP.PCAP.PP.KD, group = Year), alpha = 0.5) +
  geom_smooth(data = data_tobacco %>% filter(Year %in% c(2018, 2019, 2020)),
              aes(x = SH.PRV.SMOK, y = NY.GDP.PCAP.PP.KD, group = Year),
              method = MASS::rlm, linewidth = 1, se = FALSE, color = "black") +
  scale_x_continuous(name = "Prävalenz des aktuellen Tabakkonsums [%]",
                     breaks = c(0, 10, 20, 30, 40, 50, 60),
                     minor_breaks = waiver(),
                     limits = c(0, 60)) +
  scale_y_continuous(name = "BIP pro Kopf [$]",
                     breaks = c(0, 25000, 50000, 75000, 100000, 125000),
                     minor_breaks = waiver(),
                     limits = c(0, 125000)) +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.title.x = element_blank(),
        legend.position = "bottom", 
        plot.margin = margin(0, 0, 0, 0)) +
  facet_wrap(~ Year)

# Add overlayed normal distribution curves to the assembled plot in the data displays
# Plot the upper row of the density curves for the assembled tobacco plotting
plot_tobacco1_density_upper <-
  ggplot() +
  geom_line(data = data_tobacco_normdensity %>% filter(Year %in% c(2000, 2005, 2010)),
            aes(x = norm_x_val, y = norm_y_val, group = Year),
            color = brewer.pal(4, "Set2")[[2]], linewidth = 1, inherit.aes = FALSE) +
  geom_density(data = data_tobacco %>% filter(Year %in% c(2000, 2005, 2010)),
               aes(x = SH.PRV.SMOK, y = after_stat(density), group = Year),
               color = brewer.pal(4, "Set2")[[1]], linewidth = 1, bw = 3) +
  geom_vline(data = data_tobacco_normdensity %>% filter(Year %in% c(2000, 2005, 2010)),
             aes(xintercept = SH.PRV.SMOK_mean, group = Year),
             color = "black", linetype = "dashed") +
  scale_x_continuous(name = "Prävalenz des aktuellen Tabakkonsums [%]",
                     breaks = c(0, 10, 20, 30, 40, 50, 60),
                     minor_breaks = waiver(),
                     limits = c(0, 60)) +
  scale_y_continuous(name = "Dichte",
                     breaks = c(0, 0.025, 0.05),
                     minor_breaks = waiver(),
                     limits = c(0, 0.06)) +
  theme_bw() +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_text(margin = margin(r = 10)),
        strip.text = element_blank()) +
  facet_wrap(~ Year)

# Plot the bottom row of the density curves for the assembled tobacco plotting
plot_tobacco1_density_bottom <-
  ggplot() +
  geom_line(data = data_tobacco_normdensity %>% filter(Year %in% c(2018, 2019, 2020)),
            aes(x = norm_x_val, y = norm_y_val, group = Year, color = "Normalverteilung"),
            linewidth = 1, inherit.aes = FALSE) +
  geom_density(data = data_tobacco %>% filter(Year %in% c(2018, 2019, 2020)),
               aes(x = SH.PRV.SMOK, y = after_stat(density), group = Year),
               color = brewer.pal(3, "Set2")[[1]], linewidth = 1, bw = 3,
               show.legend = FALSE) +
  # Add an invisible line by framing dummy line to show 'Kerndichteschaetzer' with line
  # shape instead of hollow square in legend
  geom_line(data = data.frame(x = c(0,0), y = c(0,0)),
            aes(x = x, y = y, color = "Kerndichteschätzer (Bandbreite = 3)"),
            linewidth = 1) +
  # Add an invisible line by framing dummy line to show 'Robust-Linear' with line
  # shape in the single legend below the whole assembled plot
  geom_line(data = data.frame(x = c(0,0), y = c(0,0)),
            aes(x = x, y = y, color = "Robust-Linearer Zusammenhang"),
            linewidth = 1) +
  geom_vline(data = data_tobacco_normdensity %>% filter(Year %in% c(2018, 2019, 2020)),
             aes(xintercept = SH.PRV.SMOK_mean, group = Year),
             color = "black", linetype = "dashed") +
  scale_x_continuous(name = "Prävalenz des aktuellen Tabakkonsums [%]",
                     breaks = c(0, 10, 20, 30, 40, 50, 60),
                     minor_breaks = waiver(),
                     limits = c(0, 60)) +
  scale_y_continuous(name = "Dichte",
                     breaks = c(0, 0.025, 0.05),
                     minor_breaks = waiver(),
                     limits = c(0, 0.06)) +
  scale_color_manual(
    name = "",
    values = c("Kerndichteschätzer (Bandbreite = 3)" = brewer.pal(3, "Set2")[[1]],
               "Normalverteilung" = brewer.pal(3, "Set2")[[2]],
               "Robust-Linearer Zusammenhang" = "black")) +
  theme_bw() +
  theme(axis.title.y = element_text(margin = margin(r = 10)),
        legend.position = "bottom",
        strip.text = element_blank()) +
  facet_wrap(~ Year)

# Assemble the plot
(plot_tobacco1_data_upper /
    plot_tobacco1_density_upper /
    plot_tobacco1_data_bottom /
    plot_tobacco1_density_bottom) +
  plot_layout(heights = c(2, 0.5, 2, 0.5))
```

## 2.5 Landwirtschaft (1/4) {.smaller}

Gibt es einen Zusammenhang zwischen dem **Anteil der landwirtschaftlichen Nutzfläche** und den **CO2 Emissionen pro Kopf** eines Landes?

```{r agriculture_setup}
# Load the processed 'data_merged' data set
data_agriculture<- data_merged

# Filter relevant columns
data_agriculture <- data_agriculture %>%
  select(`Country Name`,
         `Country Code`,
         Year,
         AG.LND.AGRI.ZS,
         AG.SRF.TOTL.K2,
         EN.GHG.CO2.MT.CE.AR5)

# Convert column 'Year' to data type Integer
data_agriculture$Year <- as.integer(data_agriculture$Year)

# Save the ascending order of average agricultural land [%] by country
country_order_by_agrLand <- data_agriculture %>%
  group_by(`Country Name`) %>%
  summarise(avg_AG.LND.AGRI.ZS = mean(AG.LND.AGRI.ZS)) %>%
  ungroup() %>%
  arrange(avg_AG.LND.AGRI.ZS) %>%
  pull(`Country Name`)
```

```{r agriculture_plot1_scatter}
# Initial comparison via scatter plot of agricultural land [%] and CO2 emissions per
# capita [Mt]
ggplot(data_agriculture, aes(x = log10(EN.GHG.CO2.MT.CE.AR5 + 1), y = AG.LND.AGRI.ZS)) +
  geom_point(alpha = .3, size = 2.5) +
  geom_smooth(method = "lm", se = FALSE, color = "black") +
  ggtitle(paste0("Zusammenhang zwischen CO2 Emissionen pro Kopf und ",
                 "landwirtschaftlicher Nutzfläche")) +
  scale_x_continuous(name = "CO2 Emissionen pro Kopf [Mt] (Log10)",
                     breaks = log10(c(0, 10, 100, 1000, 10000) + 1),
                     labels = c("0", "10", "100", "1.000", "10.000")) +
  scale_y_continuous(name = "Landwirtschaftliche Nutzfläche [%]") +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5))
```

## 2.5 Landwirtschaft (2/4) {.smaller}

```{r surface_setup}
# Load the processed 'data_merged' data set via 'data_agriculture' and merge with grouping
data_surface <-
  left_join(data_agriculture, data_grouped, by = c("Country Name", "Country Code"))

# Filter for relevant columns
data_surface <- data_surface %>%
  select(`Country Name`,
         `Country Code`,
         Year,
         AG.LND.AGRI.ZS,
         AG.SRF.TOTL.K2,
         EN.GHG.CO2.MT.CE.AR5,
         cat_surface_area)

# (Min; Max)-normalize variable CO2 emissions to same scale as agricultural land [%]
data_surface_normd <- data_surface %>%
  group_by(`Country Name`) %>%
  mutate(
    co2_min = min(EN.GHG.CO2.MT.CE.AR5),
    co2_max = max(EN.GHG.CO2.MT.CE.AR5),
    co2_normd = ((EN.GHG.CO2.MT.CE.AR5 - co2_min) / (co2_max - co2_min))
  ) %>%
  ungroup()

# Pivot normalized 'data_surface' data set to longer format for better visualization of
# two variables
data_surface_normd_long <- data_surface_normd %>%
  pivot_longer(cols = c(co2_normd, AG.LND.AGRI.ZS),
               names_to = "variable", values_to = "value") %>%
  mutate(value = case_when(
    variable == "co2_normd" ~ value * 100,  # used for [%] comparison
    variable == "AG.LND.AGRI.ZS" ~ value))
```

Spielt hierbei die vollständige Landesfläche eines Landes eine Rolle?

```{r agriculture_plot2_groupfaceted}
# Plot the initial comparison via scatterplot, faceted by the grouped categories
# Plot the upper row of the faceted scatterplot
plot_surface1_upper_row <-
  ggplot(data_surface %>%
           filter(cat_surface_area %in% c("Sehr Klein", "Klein", "Mittel")),
         aes(x = log10(EN.GHG.CO2.MT.CE.AR5 + 1), y = AG.LND.AGRI.ZS)) +
  geom_point(alpha = .3, size = 2.5) +
  geom_smooth(method = "lm", se = FALSE, color = "black") +
  ggtitle(paste0("Zusammenhang zwischen CO2 Emissionen pro Kopf und ",
                 "landwirtschaftlicher Nutzfläche\nfür Ländergruppen bezüglich ",
                 "deren Landesfläche")) +
  scale_x_continuous(name = "CO2 Emissionen pro Kopf [Mt] (Log10)",
                     breaks = log10(c(0, 10, 100, 1000, 10000) + 1),
                     labels = c("0", "10", "100", "1.000", "10.000"),
                     limits = c(0, log10(max(data_surface$EN.GHG.CO2.MT.CE.AR5) + 1))) +
  scale_y_continuous(name = "Landwirtschaftliche Nutzfläche [%]",
                     limits = c(0, max(data_surface$AG.LND.AGRI.ZS))) +
  theme_bw() +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ cat_surface_area, ncol = 3)

# Plot the bottom row of the faceted scatterplot
plot_surface1_bottom_row <-
  ggplot(data_surface %>%
           filter(cat_surface_area %in% c("Groß", "Sehr Groß")),
         aes(x = log10(EN.GHG.CO2.MT.CE.AR5 + 1), y = AG.LND.AGRI.ZS)) +
  geom_point(alpha = .3, size = 2.5) +
  geom_smooth(method = "lm", se = FALSE, color = "black") +
  scale_x_continuous(name = "CO2 Emissionen pro Kopf [Mt] (Log10)",
                     breaks = log10(c(0, 10, 100, 1000, 10000) + 1),
                     labels = c("0", "10", "100", "1.000", "10.000"),
                     limits = c(0, log10(max(data_surface$EN.GHG.CO2.MT.CE.AR5) + 1))) +
  scale_y_continuous(name = "Landwirtschaftliche Nutzfläche [%]",
                     limits = c(0, max(data_surface$AG.LND.AGRI.ZS))) +
  theme_bw() +
  theme(axis.title.y = element_blank()) +
  facet_wrap(~ cat_surface_area, ncol = 2)

# Assemble the plot
wrap_elements(full = textGrob("Landwirtschaftliche Nutzfläche [%]",
                              rot = 90, gp = gpar(fontsize = 11))) +
  (plot_surface1_upper_row /
     (plot_spacer() +
        plot_surface1_bottom_row +
        plot_spacer() +
        plot_layout(widths = c(.44, 2, .5)))) +
  plot_layout(widths = c(1, 99))
```

## 2.5 Landwirtschaft (3/4) {.smaller}

```{r agriculture_plot3_groupfaceted_normd}
# Plotting with normalized data over time for each group
# Plot the upper row of the faceted normalized scatter plot
plot_surface3_upper_row <-
  ggplot(data_surface_normd_long %>%
           filter(cat_surface_area %in% c("Sehr Klein", "Klein", "Mittel")),
         aes(x = Year, y = value, group = interaction(`Country Name`, variable))) +
  geom_point(aes(fill = variable), alpha = 0.3, size = 2.5, shape = 21, stroke = 0.5) +
  geom_smooth(aes(group = variable),
              method = "lm", se = FALSE, color = "black", size = 1.5) +
  geom_smooth(aes(group = variable, color = variable),
              method = "lm", se = FALSE, size = 1, show.legend = FALSE) +
  ggtitle(paste0("Zusammenhang zwischen CO2 Emissionen pro Kopf und ",
                 "landwirtschaftlicher Nutzfläche\nfür Ländergruppen bezüglich ",
                 "deren Landesfläche")) +
  scale_x_discrete(name = "Jahr", breaks = seq(2000, 2020, by = 5)) +
  scale_y_continuous(name = "Anteil [%]", limits = c(0, 100)) +
  scale_color_brewer(palette = "Set2") +
  scale_fill_brewer(palette = "Set2",
                    labels = c("Landwirtschaftliche Nutzfläche [%]",
                               "(Min; Max)-normalisierte CO2 Emissionen pro Kopf [%]")) +
  theme_bw() +
  theme(axis.text.x = element_text(hjust = 0.5),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ cat_surface_area, ncol = 3)

# Plot the bottom row of the faceted normalized scatterplot
plot_surface3_bottom_row <-
  ggplot(data_surface_normd_long %>%
           filter(cat_surface_area %in% c("Groß", "Sehr Groß")),
         aes(x = Year, y = value, group = interaction(`Country Name`, variable))) +
  geom_point(aes(fill = variable), alpha = 0.3, size = 2.5, shape = 21, stroke = 0.5) +
  geom_smooth(aes(group = variable),
              method = "lm", se = FALSE, color = "black", size = 1.5) +
  geom_smooth(aes(group = variable, color = variable),
              method = "lm", se = FALSE, size = 1, show.legend = FALSE) +
  scale_x_discrete(name = "Jahr", breaks = seq(2000, 2020, by = 5)) +
  scale_y_continuous(name = "Anteil [%]", limits = c(0, 100)) +
  scale_color_brewer(name = "", palette = "Set2", labels = c("A", "B")) +
  scale_fill_brewer(name = "", palette = "Set2",
                    labels = c("Landwirtschaftliche Nutzfläche [%]",
                               "(Min; Max)-normalisierte CO2 Emissionen pro Kopf [%]")) +
  theme_bw() +
  theme(axis.text.x = element_text(hjust = 0.5),
        axis.title.y = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 12),
        plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ cat_surface_area, ncol = 2)

# Assemble the plot
wrap_elements(full = textGrob("Anteil [%]", rot = 90, gp = gpar(fontsize = 11))) +
  (plot_surface3_upper_row /
     (plot_spacer() +
        plot_surface3_bottom_row +
        plot_spacer() +
        plot_layout(widths = c(.4, 2, .5)))) +
  plot_layout(widths = c(1, 99))
```

## 2.5 Landwirtschaft (4/4) {.smaller}

:::::::::: {style="position: relative; width: 100%; height: 100%; z-index: 1;"}
::: {style="position: relative; z-index: 1;"}
```{r agriculture_plot4_groupfaceted_perCapita, fig.height=8, fig.width=14}
# TODO: GET RID OF 'data_experiment' AND INSERT INTO USAGE OF 'data_surface' WHEN 
# EXPERIMENT IS CONCLUDED IN THE 'surface.Rmd' FILE!

# Load the processed 'data_merged' data set using 'here'
data_experiment <- data_merged

# Select relevant columns
data_experiment <- data_experiment%>%
  select(`Country Name`,
         `Country Code`,
         Year,
         SP.POP.TOTL,
         EN.POP.DNST,
         AG.SRF.TOTL.K2,
         AG.LND.AGRI.ZS,
         EN.GHG.CO2.MT.CE.AR5)

# Form new variables by combining and distinguishing existing ones
data_experiment <- data_experiment %>%
  mutate(absoluteAgrLand = (AG.LND.AGRI.ZS / 100) * AG.SRF.TOTL.K2,
         co2perSurface = EN.GHG.CO2.MT.CE.AR5 / AG.SRF.TOTL.K2,
         co2perAgrLand = EN.GHG.CO2.MT.CE.AR5 / absoluteAgrLand,
         agrLandperCapita = absoluteAgrLand / SP.POP.TOTL)

data_experiment_long <- data_experiment %>%
  pivot_longer(
    cols = starts_with("co2"),
    names_to = "variable",
    values_to = "value",
  )

# Select only grouping regarding the agriculture and surface area topic
data_grouped <- data_grouped %>% select(`Country Name`, `Country Code`, cat_surface_area)

# Join the grouping to the existing 'data_experiment' data set
data_experiment_long <-
  left_join(data_experiment_long, data_grouped, by = c("Country Name", "Country Code"))

data_experiment_long <- data_experiment_long %>% 
  arrange(cat_surface_area, `Country Name`) %>%
  mutate(`Country Name` = factor(`Country Name`, levels = unique(`Country Name`)),
         facet_label = paste0(cat_surface_area, ": ", `Country Name`))

# Ensure that the new 'facet_label' is a factor and order it according to the original
# levels of 'cat_surface_area'
data_experiment_long$facet_label <-
  factor(
    data_experiment_long$facet_label,
    levels = unique(
      data_experiment_long$facet_label[order(data_experiment_long$cat_surface_area)]
      ))

# CO2 Emissions per agricultural land [t / km^2] and surface area [t / km^2]
ggplot(data_experiment_long,
       aes(x = Year,
           y = value * 1000 * 1000,
           group = interaction(`Country Name`, variable))) +
  geom_point(aes(fill = variable), alpha = 0.75, size = 2, shape = 21, stroke = 0.5) +
  ggtitle(paste0("Zusammenhang zwischen CO2 Emissionen pro landwirtschaftlicher ",
                 "Nutzfläche und pro Landesfläche")) +
  scale_x_discrete(name = "Jahr", breaks = seq(2000, 2020, by = 5)) +
  scale_y_continuous(name = "CO2 Emissionen pro Kopf [t]") +
  scale_fill_manual(name = "",
                    values = c(co2perAgrLand = brewer.pal(3, "Set2")[[1]],
                               co2perSurface = brewer.pal(3, "Set2")[[2]]),
                    labels = c(co2perAgrLand =expression(pro ~
                                                           landwirtschaftlicher ~
                                                           Nutzfläche ~
                                                           "[" ~ km^2 ~ "]"),
                               co2perSurface = expression(pro ~
                                                            Landesfläche ~
                                                            "[" ~ km^2 ~ "]"))) +
  theme_bw() +
  theme(legend.position = "bottom",
        plot.title = element_text(size = 20, hjust = 0.5),
        strip.text = element_text(size = 12),
        axis.title = element_text(size = 16),
        legend.text = element_text(size = 16)) +
  facet_wrap(~ facet_label, scales = "free_y")
```
:::

::: {.fragment style="position: absolute; top: 115px; left: 51px; width: 172px; height: 94px; border: 3px solid black; z-index: 10; pointer-events: none;"}
:::

::: {.fragment style="position: absolute; top: 115px; left: 668px; width: 172px; height: 94px; border: 3px solid black; z-index: 10; pointer-events: none;"}
:::

::: {.fragment style="position: absolute; top: 213px; left: 51px; width: 172px; height: 94px;border: 3px solid black; z-index: 10; pointer-events: none;"}
:::

::: {.fragment style="position: absolute; top: 315px; left: 51px; width: 172px; height: 94px; border: 3px solid red; z-index: 10; pointer-events: none;"}
:::

::: {.fragment style="position: absolute; top: 315px; left: 668px; width: 172px; height: 94px; border: 3px solid red; z-index: 10; pointer-events: none;"}
:::

::: {.fragment style="position: absolute; top: 413px; left: 51px; width: 172px; height: 94px; border: 3px solid red; z-index: 10; pointer-events: none;"}
:::
::::::::::

::: {style="position: absolute; top: 115px; left: 870px; width: 172px; height: 94px; border: 3px solid blue;"}
:::

::: {style="position: absolute; top: 213px; left: 668px; width: 172px; height: 94px; border: 3px solid blue;"}
:::

## Zusammenfassung und Diskussion {.smaller}
